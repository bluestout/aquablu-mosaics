{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign days_price_valid_until = 10 | times: 86400
  assign gtin_option = 'gtin'
  assign is_barcode_available = false
  if current_variant.barcode != blank
    assign is_barcode_available = true
    assign gtin_string_length = current_variant.barcode | size
    if gtin_string_length == 8 or gtin_string_length == 12 or gtin_string_length == 13 or gtin_string_length == 14
      assign is_valid_gtin_length = true
      assign gtin_option = gtin_option | append: gtin_string_length
    endif
  endif
-%}
{% comment %} --> Product snippets vs. merchant listings {% endcomment %}
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "ProductGroup",
    "name": {{ product.title | json }},
    "description": {{ product.description | strip_html | json }},
    "brand": {{ product.vendor | json }},
    "sku": {{ current_variant.sku | json }},
    "ProductGroupID": "{{ product.id }}",
    "category": "{{ product.type | default: 'General' }}",
    "hasVariant": [{% for variant in product.variants %}
      {
        "@type": "Product",
        "sku": "{{ variant.sku }}",
        "gtin14": "{{ variant.id }}",{% if variant.featured_image %}
        "image": "{{ variant.featured_image.src |  image_url: width: variant.featured_image.width }}",{% else %}
        "image": "{{ product.featured_image.src |  image_url: width: product.featured_image.width }}",{% endif %}
        "name": "{{ variant.title | replace: '"', '' }}",
        "offers": {
            "@type": "Offer",
            "price": {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency": {{ cart.currency.iso_code | json }},
            "availability": "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "url": {{ shop.url | append: variant.url | json }}
          }
      }{% unless forloop.last %},{% endunless %}{% endfor %}
    ],
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.5",
      "reviewCount": "10"
    },
    "review": [],
    {%- if is_barcode_available and is_valid_gtin_length -%}
      "{{ gtin_option }}": {{ current_variant.barcode | json }},
      "productId": {{ current_variant.barcode | json }},
    {%- elsif is_barcode_available -%}
      "mpn": {{ current_variant.barcode | json }},
      "productId": {{ current_variant.barcode | json }},
    {%- endif -%}
    "image": {
      "@type": "ImageObject",
      "url": "https:{{ product.featured_media.preview_image | img_url: '1024x1024' }}",
      "name": {{ product.title | json }},
      "width": 1024,
      "height": 1024
    }
  }
</script>

<script>
  const appKey = "7grhf0lP3zYoAmdQOa6FxrOsngY8diqMaeG2uT5K"; // Replace with your Yotpo app key
  const productId = "{{ product.id }}";

  fetch(`https://api.yotpo.com/v1/widget/${appKey}/products/${productId}/reviews.json`)
  .then(response => response.json())
  .then(data => {
    console.log("Yotpo API Response:", data);
    const reviews = data.response.reviews || [];
    const reviewSchema = reviews.map(review => ({
      "@type": "Review",
      "author": {
        "@type": "Person",
        "name": review.name || "Anonymous"
      },
      "datePublished": review.created_at || new Date().toISOString(),
      "reviewBody": review.content || "No review content provided.",
      "reviewRating": {
        "@type": "Rating",
        "ratingValue": review.score || "0",
        "bestRating": "5",
        "worstRating": "1"
      }
    }));
    
    const jsonLd = document.querySelector('script[type="application/ld+json"]');
    const jsonData = JSON.parse(jsonLd.textContent);
    jsonData.review = reviewSchema;
    jsonLd.textContent = JSON.stringify(jsonData, null, 2);
    console.log("Updated JSON-LD:", jsonLd.textContent);
  })
  .catch(error => console.error("Error fetching Yotpo reviews:", error));
</script>
{% comment %} <-- Product snippets vs. merchant listings {% endcomment %}
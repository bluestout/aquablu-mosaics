{% comment %}
- collection: Liquid 'collection' or 'search' object
- items: Paginated 'collection.products' or 'search.results' list. Cannot be pulled from the the 'collection' object passed in above
- grid_style
- quick_shop_enable
{% endcomment %}

{% liquid
  if collection.products
      assign count = collection.products_count
      assign count_label = 'collections.general.items_with_count'
  endif

  if collection.results
      assign count = collection.results_count
      assign count_label = 'general.search.result_count'
  endif

  assign current_filter_size = 0
  for filter in filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
%}

<div class="collection-grid__wrapper"></div>

  <div class="collection-filter">
     {% comment %}<-- Sticky Filter {% endcomment %}
    <div class="collection-filter__inner">
      <div class="collection-filter__item collection-filter__item--drawer">
        <button
          type="button"
          class="collection-filter__btn text-link ">
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10">.</path><path d="M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5z"/><path d="M7 42h31">.</path><path d="M16 22H6">.</path><path d="M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5z"/><path d="M57 22H26">.</path></svg>
          {{ 'collections.filters.title_tags' | t }} 
          {%- if current_filter_size > 0 -%}
            ({{ current_filter_size }})
          {%- endif -%}
        </button>
        {% if section.settings.enable_horizontal_filter %}
        <div class="filter-item--count">
          {{ count_label | t: count: count }}
        </div> 
        {% comment %} <div class="collection-sticky-filter_top-area collection-sticky-filter__active_tags small--hide">
          {%  assign has_active_filter = false %}
          <ul class="no-bullets tag-list tag-list--active-tags">
            {%- for filter in collection.filters -%}
              {%- for filter_value in filter.active_values -%}
                {%  assign has_active_filter = true %}
                <li class="tag tag--remove">
                  <a class="btn btn--small js-no-transition" href="{{ filter_value.url_to_remove }}">
                    {{ filter_value.label | escape }}
                  <svg class="icon-tag-close" xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8" fill="none">
                    <path d="M6.80507 1L1.2536 6.75093" stroke="#152755" stroke-width="1.5" stroke-linecap="round"/>
                    <path d="M1.25352 1L6.805 6.75093" stroke="#152755" stroke-width="1.5" stroke-linecap="round"/>
                  </svg>
                  </a>
                </li>
              {%- endfor -%}
            {%- endfor -%}
          </ul> 
          {% if collection.filters.size > 0 and has_active_filter %}
            <button 
              class="btn btn--small tag tag--remove-all btn--clear-all" 
              onclick="location.href='{{ collection.url | escape }}';">
              Clear all
            </button>
          {% endif %}
        </div> {% endcomment %}
        {% else %}
          <button
            type="button"
            class="desktop-collection-filter__btn text-link small--hide">
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-filter" viewBox="0 0 64 64"><path d="M48 42h10">.</path><path d="M48 42a5 5 0 1 1-5-5 5 5 0 0 1 5 5z"/><path d="M7 42h31">.</path><path d="M16 22H6">.</path><path d="M16 22a5 5 0 1 1 5 5 5 5 0 0 1-5-5z"/><path d="M57 22H26">.</path></svg>
            {{ 'collections.filters.title_tags' | t }}
            {%- if current_filter_size > 0 -%}
              ({{ current_filter_size }})
            {%- endif -%}
          </button>
          <div class="collection-filter__item--count">
            {{ count_label | t: count: count }}
          </div> 
        {% endif %}
        {% comment %}<-- Sticky Filter {% endcomment %}
      </div>

      {% comment %}--> Sticky Filter {% endcomment %}
    {% if section.settings.enable_horizontal_filter %}
      {%- render 'collection-grid-sticky-filters',
        collection: collection,
        enable_sidebar: section.settings.enable_sidebar,
        enable_color_swatches: section.settings.enable_color_swatches,
        tags_combine: section.settings.tags_combine,
        enable_sort: section.settings.enable_sort,
        collapse_filters: section.settings.collapse_filters,
        count_label: count_label,
        count: count
      -%}
    {% endif %}
      
      <div class="collection-filter__item collection-filter__item--right">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <div class="collection-filter__sort small--hide">
          <label for="SortBy" class="hidden-label">{{ 'collections.sorting.title' | t }}</label>
          <select name="SortBy" id="SortBy" data-default-sortby="{{ collection.default_sort_by }}">
            <option value="title-ascending"{% if sort_by == collection.default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>
            {%- for option in collection.sort_options -%}
              <option value="{{ option.value }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name }}</option>
            {%- endfor -%}
          </select>
        </div>

        {%- liquid
          assign productGridView = grid_style
          if cart.attributes.product_view != blank
            assign productGridView = cart.attributes.product_view
          endif
        -%}

        <ul class="no-bullets inline-list text-right">
          <li><button type="button" class="grid-view-btn{% if productGridView == 'large' %} is-active{% endif %}" data-view="large" title="{{ 'collections.general.large' | t }}">
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-view-large" viewBox="0 0 35 35"><path d="M0 0h35v35H0z"/></svg>
            <span class="icon__fallback-text">{{ 'collections.general.large' | t }}</span>
          </button></li>
          <li><button type="button" class="grid-view-btn{% if productGridView == 'small' %} is-active{% endif %}" data-view="small" title="{{ 'collections.general.small' | t }}">
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-view-small" viewBox="0 0 35 35"><path d="M0 0h15v15H0zM20 0h15v15H20zM0 20h15v15H0zM20 20h15v15H20z"/></svg>
            <span class="icon__fallback-text">{{ 'collections.general.small' | t }}</span>
          </button></li>
          <li><button type="button" class="grid-view-btn{% if productGridView == 'list' %} is-active{% endif %}" data-view="list" title="{{ 'collections.general.list' | t }}">
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-view-list" viewBox="0 0 35 35"><g id="Layer_2" data-name="Layer 2"><path d="M0 0h35v8H0zM0 13h35v8H0zM0 27h35v8H0z"/></g></svg>
            <span class="icon__fallback-text">{{ 'collections.general.list' | t }}</span>
          </button></li>
        </ul>
      </div>
    </div>

    <div class="active-filters-wrapper">
      <div class="collection-sticky-filter_top-area collection-sticky-filter__active_tags small--hide">
          {%  assign has_active_filter = false %}
          <ul class="no-bullets tag-list tag-list--active-tags">
            {%- for filter in collection.filters -%}
              {%- for filter_value in filter.active_values -%}
                {%  assign has_active_filter = true %}
                <li class="tag tag--remove">
                  <a class="btn btn--small js-no-transition" href="{{ filter_value.url_to_remove }}">
                    {{ filter_value.label | escape }}
                  <svg class="icon-tag-close" xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8" fill="none">
                    <path d="M6.80507 1L1.2536 6.75093" stroke="#152755" stroke-width="1.5" stroke-linecap="round"/>
                    <path d="M1.25352 1L6.805 6.75093" stroke="#152755" stroke-width="1.5" stroke-linecap="round"/>
                  </svg>
                  </a>
                </li>
              {%- endfor -%}
            {%- endfor -%}
          </ul> 
          {% if collection.filters.size > 0 and has_active_filter %}
            <button 
              class="btn btn--small tag tag--remove-all btn--clear-all" 
              onclick="location.href='{{ collection.url | escape }}';">
              Clear all
            </button>
          {% endif %}
        </div>
    </div>

    <div class="collection-mobile-filters medium-up--hide">
      <div class="collection-mobile-filters__holder" id="CollectionInlineFilterWrap"></div>
    </div>
  </div>

  {%- if items == blank -%}
    <div class="index-section">{{ 'collections.general.no_matches' | t }}</div>
  {%- endif -%}
<div class="collection-grid-wrapper">
  <div
    class="page-width new-grid product-grid collection-grid"
    data-view="{{ productGridView }}"
    data-scroll-to>
    {%- for item in items -%}
      {%- if item.object_type == 'product' -%}
        {%- render 'product-grid-item', product: item -%}
        {%- if quick_shop_enable -%}
            {%- render 'quick-shop-modal', product: item -%}
        {%- endif -%}
      {%- else -%}
        {%- render 'search-grid-item', item: item -%}
      {%- endif -%}
    {%- endfor -%}
  </div>
</div>

{%- paginate collection.products by 40 -%}
  {%- liquid
        if paginate.pages > 1
          render 'pagination', paginate: paginate
        endif
  -%}
{%- endpaginate -%} 

<script type="text/javascript">
  function handleDropdownClose(event) {
    if (window.innerWidth > 1150) {
      const isOutsideStickyParent = !event.target.closest('.single-filter-block');

      if (isOutsideStickyParent) {
        const openStickyButtons = document.querySelectorAll('.sticky-filter--button.is-open');
        const openCollapsibleContents = document.querySelectorAll('.collapsible-content.collapsible-content--all.is-open');

        openStickyButtons.forEach(button => {
          button.classList.remove('is-open');
        });

        openCollapsibleContents.forEach(content => {
          content.classList.remove('is-open');
        });
      }
    }
  }

  function setupEventListeners() {
    document.addEventListener('click', handleDropdownClose);
    window.addEventListener('resize', handleDropdownClose);
  }

  // Initialize event listeners
  setupEventListeners();
</script>